build_icedtea_web(){
./configure \
     --prefix=/usr/share/icedtea-web \
     --datarootdir=/usr/share \
     --with-jdk-home=/usr/lib/java \
     --with-jre-home=/usr/lib/java \
     --with-java=/usr/bin/java \
     --with-browser-tests \
     --disable-docs
make
make install DESTDIR="$PKGDIR"
install -m 755 -d "$PKGDIR"/usr/share/{applications,pixmaps}
install -m 644 javaws.png "$PKGDIR"/usr/share/pixmaps
install -m 644 {javaws,itweb-settings}.desktop "$PKGDIR"/usr/share/applications
install -m 755 -d "$PKGDIR"/usr/lib/mozilla/plugins/
ln -sf /usr/share/icedtea-web/lib/IcedTeaPlugin.so "$PKGDIR"/usr/lib/mozilla/plugins/
for file in itweb-settings javaws policyeditor; do
    ln -sf /usr/share/icedtea-web/bin/${file} "$PKGDIR"/usr/bin/${file}
done
}

##### Control part variables
SJAVAC=1
[ "${CROSS:-$ARCH}" = "amd64" ] && export JARCH="x86_64" CONFARCH="amd64"
[ "${CROSS:-$ARCH}" = "armel" ] && export JARCH="arm" CONFARCH="arm"
[ "${CROSS:-$ARCH}" = "arm64" ] && export JARCH="aarch64" CONFARCH="aarch64"
[ "${CROSS:-$ARCH}" = "mipsel" ] && export JARCH="mipsel" CONFARCH="mipsel"
[ "${CROSS:-$ARCH}" = "powerpc" ] && export JARCH="ppc" CONFARCH="ppc"
[ "${CROSS:-$ARCH}" = "ppc64" ] && export JARCH="ppc64" CONFARCH="ppc64"

if [[ "${CROSS:-$ARCH}" != "amd64" && "${CROSS:-$ARCH}" != arm* && "${CROSS:-$ARCH}" != "ppc64" ]]; then
    config_zero="--with-jvm-variants=zero --enable-precompiled-headers"
else
    config_zero="--disable-precompiled-headers"
fi

if [[ "${SJAVAC}" == "1" ]]; then
    use_sjavac="--enable-sjavac --disable-javac-server"
fi

if [[ "${CROSS:-$ARCH}" = armel ]]; then
    config_bits="--with-target-bits=32 --with-abi-profile=arm-vfp-hflt"
fi

if [[ "${CROSS:-$ARCH}" = arm64 ]]; then
    config_bits="--with-target-bits=64 --with-abi-profile=aarch64 --with-cpu-port=aarch64"
fi

unset JAVA_HOME
unset _JAVA_OPTIONS

install -d -m 755 "$SRCDIR"/image
sh configure \
    --prefix="$SRCDIR"/image \
    --with-version-major=1 \
    --with-version-minor=9 \
    --with-version-security=0 \
    --with-version-build=${BUILD} \
    --with-version-opt="AOSC" \
    --with-num-cores=$(nproc) \
    --enable-unlimited-crypto \
    --with-zlib=system \
    --with-boot-jdk=/usr/lib/java \
    ${config_zero} ${use_sjavac} \
    ${config_bits} \
    --with-extra-cxxflags="${EXTRA_CPP_FLAGS}" \
    --with-extra-cflags="${EXTRA_CFLAGS}" \
    --with-extra-ldflags="${LDFLAGS}" \
    CC=gcc CXX=g++
    
SHORT_VERSION="$(awk '/VERSION_SHORT\s?:=\s?(.*)/ { print $3 }' build/linux-${JARCH}-normal-server-release/spec.gmk)"

# FIXME: use system giflibwhen possible

make all

make install

pushd image/jvm/"openjdk-${SHORT_VERSION}"
find . -iname '*.jar' -exec chmod ugo+r {} \;
chmod ugo+r lib/ct.sym

find . -iname '*.diz' -exec rm {} \;
find . -iname '*.debuginfo' -exec rm {} \;
popd

mkdir -p "$PKGDIR"/usr/lib/java
cp -r image/jvm/"openjdk-${SHORT_VERSION}"/* "$PKGDIR"/usr/lib/java/

mv "$PKGDIR"/usr/lib/java/jre/lib/management/jmxremote.password{.template,}
mv "$PKGDIR"/usr/lib/java/jre/lib/management/snmp.acl{.template,}

mkdir -p "$PKGDIR"/etc/openjdk/
for i in ${CONFARCH}/jvm.cfg \
         calendars.properties \
         content-types.properties \
         flavormap.properties \
         images/cursors/cursors.properties \
         logging.properties \
         management/jmxremote.access \
         management/jmxremote.password \
         management/management.properties \
         management/snmp.acl \
         net.properties \
         psfont.properties.ja \
         psfontj2d.properties \
         security/java.policy \
         security/java.security \
         sound.properties; do
    _filepkgpath="$PKGDIR"/usr/lib/java/jre/lib/${i}
    install -D -m 644 ${_filepkgpath} "$PKGDIR"/etc/openjdk/${i}
done

mkdir -p "$PKGDIR"/usr/src/openjdk
install -D image/jvm/"openjdk-${SHORT_VERSION}"/src.zip "$PKGDIR"/usr/src/openjdk/src.zip
ln -sv /usr/src/openjdk/src.zip "$PKGDIR"/usr/lib/java/src.zip

install -d -m 755 "$PKGDIR"/usr/share/doc/openjdk
if [[ "${CROSS:-$ARCH}" != "amd64" && "${CROSS:-$ARCH}" != "arm64" ]]; then
    cp -r build/linux-${JARCH}-normal-zero-release/docs/* \
        "$PKGDIR"/usr/share/doc/openjdk/
else
    cp -r build/linux-${JARCH}-normal-server-release/docs/* \
        "$PKGDIR"/usr/share/doc/openjdk/
fi

mv "$PKGDIR"/usr/lib/java/man "$PKGDIR"/usr/share/man
ln -sv /usr/share/man "$PKGDIR"/usr/lib/java/man

cp -r "$PKGDIR"/usr/lib/java/jre/* "$PKGDIR"/usr/lib/java/

rm -rf "$PKGDIR"/usr/lib/java/jre/
mkdir -p "$PKGDIR"/usr/lib/java/jre/lib/
pushd "$PKGDIR"/usr/lib/java/jre/lib/
ln -sv ../../lib/* .
popd

pushd "$PKGDIR"/usr
mkdir bin
pushd bin
for i in ../lib/java/bin/*; do
    ln -sv $i
done
popd
popd

mkdir -p "$PKGDIR"/etc/ssl/certs/java
cp image/jvm/"openjdk-${SHORT_VERSION}"/jre/lib/security/cacerts "$PKGDIR"/etc/ssl/certs/java/

rm -fv "$PKGDIR"/usr/lib/java/lib/security/cacerts
ln -sfv /etc/ssl/certs/java/cacerts "$PKGDIR"/usr/lib/java/lib/security/cacerts

pushd icedtea-web
build_icedtea_web
popd

# RPM is very, very confused by this.
rm -rf "$PKGDIR"/usr/share/man/ja

cat > "$SRCDIR"/autobuild/conffiles << EOF
/etc/openjdk/${CONFARCH}/jvm.cfg
/etc/openjdk/calendars.properties
/etc/openjdk/content-types.properties
/etc/openjdk/flavormap.properties
/etc/openjdk/images/cursors/cursors.properties
/etc/openjdk/logging.properties
/etc/openjdk/management/jmxremote.access
/etc/openjdk/management/jmxremote.password
/etc/openjdk/management/management.properties
/etc/openjdk/management/snmp.acl
/etc/openjdk/net.properties
/etc/openjdk/psfont.properties.ja
/etc/openjdk/psfontj2d.properties
/etc/openjdk/security/java.policy
/etc/openjdk/security/java.security
/etc/openjdk/sound.properties
EOF

mkdir -p "$SRCDIR"/autobuild/overrides/etc/ld.so.conf.d/
cat > "$SRCDIR"/autobuild/overrides/etc/ld.so.conf.d/openjdk.conf << EOF
/usr/lib/java/lib/${CONFARCH}
/usr/lib/java/lib/${CONFARCH}/jli
/usr/lib/java/lib/${CONFARCH}/server
EOF

unset JARCH CONFARCH
