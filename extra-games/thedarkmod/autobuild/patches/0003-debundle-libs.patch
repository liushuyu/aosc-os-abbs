--- a/sys/scons/SConscript.game	2017-03-11 06:24:20.000000000 +0800
+++ b/sys/scons/SConscript.game	2017-09-06 10:34:24.985476749 -0600
@@ -293,8 +293,6 @@
 
 darkModList = scons_utils.BuildList('../../game/', darkModSrc)
 
-ziploader_list = SConscript( '../../sys/scons/SConscript.ziploader' )
-
 local_env = g_game_env.Clone()
 
 # The game files use the game/precompiled_game.h header, make sure it can be found
@@ -308,13 +306,7 @@
 local_env.Append( LINKFLAGS = [ '-lrt' ] ) #, '-lpng'
 
 local_env.Append(LIBS = [
-	# Uncomment this if you're on a x64 system - there is no libpng.a on Ubuntu x64 for instance
-	#File('/usr/lib32/libpng.so'),
-	File('#/linux/libcurl/libcurl.a'),
-	File('#/linux/polarssl/libpolarssl.a'),
-	File('#/linux/boost/lib/libboost_filesystem.a'),
-	File('#/linux/boost/lib/libboost_system.a'),
-	File('#/linux/boost/lib/libboost_thread.a')
+	'curl', 'boost_filesystem', 'libboost_system', 'boost_thread', 'png', 'z'
 ])
 
 if NO_GCH == '0':
@@ -327,9 +319,8 @@
 # greebo: Use custom compiled devIL and libjpeg in Linux
 devil_list = SConscript( '../../sys/scons/SConscript.devil' )
 libjpeg_list = SConscript( '../../sys/scons/SConscript.libjpeg' )
-libpng_list = SConscript( '../../sys/scons/SConscript.libpng' )
 
-full_list = game_list + darkModList + idlib_objects + ziploader_list + devil_list + libjpeg_list + libpng_list
+full_list = game_list + darkModList + idlib_objects + devil_list + libjpeg_list
 
 ret = local_env.SharedLibrary('game', full_list )
 
--- a/sys/scons/SConscript.core	2017-03-10 15:24:20.000000000 -0700
+++ b/sys/scons/SConscript.core	2017-09-06 10:35:19.808377790 -0600
@@ -313,7 +313,7 @@
 	sound_env.Append( CPPDEFINES = 'NO_ALSA' )
 sound_lib = sound_env.StaticLibrary( 'sound', sound_list )
 
-local_env.Append( LIBS = [ 'pthread', 'dl', 'rt' ] ) #, 'png' # greebo: Added librt and libpng
+local_env.Append( LIBS = [ 'pthread', 'dl', 'rt', 'png' ] ) #, 'png' # greebo: Added librt and libpng
 if ( local_dedicated == 0 ):
 	local_env.Append( LIBS = [ 'X11', 'Xext', 'Xxf86vm' ] ) # 'Xxf86dga', 
 #	local_env.Append( LIBPATH = [ '/usr/X11R6/lib' ] )
@@ -322,29 +322,19 @@
 
 # greebo: Add boost and image libraries
 local_env.Append(LIBS = [
-	# Uncomment these if you're on a x64 system - there is no libpng.a on Ubuntu x64 for instance
-	#File('/usr/lib32/libjpeg.so'),
-	#File('/usr/lib32/libpng.so'),
-	File('#/linux/polarssl/libpolarssl.a'),
-	File('#/linux/boost/lib/libboost_filesystem.a'),
-	File('#/linux/boost/lib/libboost_system.a'),
-	File('#/linux/boost/lib/libboost_thread.a'),
-	File('#/linux/boost/lib/libboost_regex.a')
+	'boost_filesystem', 'boost_system', 'boost_thread', 'boost_regex', 'curl', 'z'
 ])
 
 source_list = core_list
 source_list += idlib_objects
 source_list += [ '../../glimp/sys/scons/libglimp.a' ]
 source_list += libogg
-source_list += curl_lib
 source_list += sound_lib
 source_list += [ '../../openal/stubs.cpp' ]
 
 # greebo: Use custom compiled devIL and libjpeg (since the engine requires 4 bytes per pixel format) in Linux
 source_list += SConscript( '../../sys/scons/SConscript.devil' )
 source_list += SConscript( '../../sys/scons/SConscript.libjpeg' )
-source_list += SConscript( '../../sys/scons/SConscript.libpng' )
-source_list += SConscript( '../../sys/scons/SConscript.ziploader' )
 
 source_list += g_env_noopt.StaticObject( '../../tools/compilers/dmap/optimize_gcc.cpp' )
 
